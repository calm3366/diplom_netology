image: ubuntu:22.04

services:
  - docker:20.10.5-dind

stages:
  - build

variables:
  YA_REGISTRY_LOGIN: oauth
  YA_REGISTRY: cr.yandex
  YA_REGISTRY_ID: crpdgkjqba4kiu6sm7bq
  IMAGE_NAME: netology-web
  KUBE_URL: https://158.160.168.73

.docker_login:
  stage: build
  script:
    - docker login -u $YA_REGISTRY_LOGIN -p $YA_REGISTRY_PASSWORD $YA_REGISTRY

# kubectl:
#   stage: build
#   script:
#     - apt install curl
#     - curl -LO https://dl.k8s.io/release/`curl -LS https://dl.k8s.io/release/stable.txt`/bin/linux/amd64/kubectl
#     - chmod +x ./kubectl
#     - sudo mv ./kubectl /usr/local/bin/kubectl


test:
  # extends: .kubectl
  stage: build
  image: "registry.gitlab.com/gitlab-org/cluster-integration/auto-deploy-image"
  script:
    - kubectl config set-cluster sa-test2 --certificate-authority=ca.pem --server=$KUBE_URL --kubeconfig=test.kubeconfig
    - kubectl config set-credentials admin-user --token=$KUBE_TOKEN --kubeconfig=test.kubeconfig
    - kubectl config set-context default --cluster=sa-test2 --user=admin-user --kubeconfig=test.kubeconfig
    - kubectl config use-context default --kubeconfig=test.kubeconfig
    - kubectl get namespace --kubeconfig=test.kubeconfig 
    # - kubectl config set-cluster k8s --server=$KUBE_URL --certificate-authority=ca.pem --kubeconfig=test.kubeconfig
    # - kubectl config set-credentials admin-user --token="$KUBE_TOKEN" --kubeconfig=test.kubeconfig
    # - kubectl config set-context default --cluster=k8s --user=admin-user --kubeconfig=test.kubeconfig
    # - kubectl config use-context default --kubeconfig=test.kubeconfig
    # - kubectl cluster-info --kubeconfig=test.kubeconfig
   
    # - kubectl get no
    # - cat ~/.kube/config
    # - mkdir -p $HOME/.kube
    # - echo -n $KUBECONFIG > $HOME/.kube/config
    # - kubectl cluster-info
    # - sed -i -e "s/K8S_CERTIFICATE_AUTH/$K8S_CERTIFICATE_AUTH/" config
    # - cp config /root/
    # - ls /root/
    

builder_latest:
  extends: .docker_login
  stage: build
  script:
    - docker build -t $YA_REGISTRY/$YA_REGISTRY_ID/$IMAGE_NAME:latest .
    - docker push $YA_REGISTRY/$YA_REGISTRY_ID/$IMAGE_NAME:latest
  rules:
    - if: '$CI_COMMIT_TAG == null'
      changes:
        - Dockerfile
        - html/*

builder_tag:
  extends: 
    - .docker_login
    # - .kubectl
  stage: build
  script:
    - docker build -t $YA_REGISTRY/$YA_REGISTRY_ID/$IMAGE_NAME:$CI_COMMIT_TAG .
    - docker push $YA_REGISTRY/$YA_REGISTRY_ID/$IMAGE_NAME:$CI_COMMIT_TAG
    - sed -i -e "s/IMAGE_TAG/$CI_COMMIT_TAG/" deployment-nginx.yaml
    - kubectl apply -f deployment-nginx.yaml 
  rules:
    - if: $CI_COMMIT_TAG
      changes:
        - Dockerfile
        - html/*
